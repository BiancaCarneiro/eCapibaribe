{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  // injetando o HttpClient\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:3000/user'; // api rest fake\n    // Headers\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  // Obtem todos os Userros\n  getUsers(username) {\n    return this.httpClient.get(this.url).pipe(retry(2), catchError(this.handleError));\n  }\n  // Obtem um Userro pelo id\n  getUserByUsername(username) {\n    return this.httpClient.get(this.url + '/' + username).pipe(retry(2), catchError(this.handleError));\n  }\n  // salva um Userro\n  saveUser(User) {\n    return this.httpClient.post(this.url, JSON.stringify(User), this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  // utualiza um Userro\n  updateUser(User) {\n    return this.httpClient.put(this.url + '/' + User.id, JSON.stringify(User), this.httpOptions).pipe(retry(1), catchError(this.handleError));\n  }\n  // deleta um Userro\n  deleteUser(User) {\n    return this.httpClient.delete(this.url + '/' + User.id, this.httpOptions).pipe(retry(1), catchError(this.handleError));\n  }\n  // Manipulação de erros\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","retry","catchError","UserService","constructor","httpClient","url","httpOptions","headers","getUsers","username","get","pipe","handleError","getUserByUsername","saveUser","User","post","JSON","stringify","updateUser","put","id","deleteUser","delete","error","errorMessage","ErrorEvent","message","status","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projetos\\ecommerce\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  url = 'http://localhost:3000/user'; // api rest fake\n\n  // injetando o HttpClient\n  constructor(private httpClient: HttpClient) { }\n\n  // Headers\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  // Obtem todos os Userros\n  getUsers(username: string): Observable<User[]> {\n    return this.httpClient.get<User[]>(this.url)\n      .pipe(\n        retry(2),\n        catchError(this.handleError))\n  }\n\n  // Obtem um Userro pelo id\n  getUserByUsername(username: string): Observable<User> {\n    return this.httpClient.get<User>(this.url + '/' + username)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n\n  // salva um Userro\n  saveUser(User: User): Observable<User> {\n    return this.httpClient.post<User>(this.url, JSON.stringify(User), this.httpOptions)\n      .pipe(\n        retry(2),\n        catchError(this.handleError)\n      )\n  }\n\n  // utualiza um Userro\n  updateUser(User: User): Observable<User> {\n    return this.httpClient.put<User>(this.url + '/' + User.id, JSON.stringify(User), this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      )\n  }\n\n  // deleta um Userro\n  deleteUser(User: User) {\n    return this.httpClient.delete<User>(this.url + '/' + User.id, this.httpOptions)\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      )\n  }\n\n  // Manipulação de erros\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Erro ocorreu no lado do client\n      errorMessage = error.error.message;\n    } else {\n      // Erro ocorreu no lado do servidor\n      errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  };\n\n}\n"],"mappings":"AACA,SAAwCA,WAAW,QAAQ,sBAAsB;AACjF,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;;;AAMlD,OAAM,MAAOC,WAAW;EAItB;EACAC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,GAAG,GAAG,4BAA4B,CAAC,CAAC;IAKpC;IACA,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIT,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAL6C;EAO9C;EACAU,QAAQA,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAS,IAAI,CAACL,GAAG,CAAC,CACzCM,IAAI,CACHX,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAAC;EACnC;EAEA;EACAC,iBAAiBA,CAACJ,QAAgB;IAChC,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAO,IAAI,CAACL,GAAG,GAAG,GAAG,GAAGI,QAAQ,CAAC,CACxDE,IAAI,CACHX,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACL;EAEA;EACAE,QAAQA,CAACC,IAAU;IACjB,OAAO,IAAI,CAACX,UAAU,CAACY,IAAI,CAAO,IAAI,CAACX,GAAG,EAAEY,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE,IAAI,CAACT,WAAW,CAAC,CAChFK,IAAI,CACHX,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACL;EAEA;EACAO,UAAUA,CAACJ,IAAU;IACnB,OAAO,IAAI,CAACX,UAAU,CAACgB,GAAG,CAAO,IAAI,CAACf,GAAG,GAAG,GAAG,GAAGU,IAAI,CAACM,EAAE,EAAEJ,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE,IAAI,CAACT,WAAW,CAAC,CAC/FK,IAAI,CACHX,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACL;EAEA;EACAU,UAAUA,CAACP,IAAU;IACnB,OAAO,IAAI,CAACX,UAAU,CAACmB,MAAM,CAAO,IAAI,CAAClB,GAAG,GAAG,GAAG,GAAGU,IAAI,CAACM,EAAE,EAAE,IAAI,CAACf,WAAW,CAAC,CAC5EK,IAAI,CACHX,KAAK,CAAC,CAAC,CAAC,EACRC,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACL;EAEA;EACAA,WAAWA,CAACY,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,mBAAmBD,KAAK,CAACI,MAAM,IAAI,GAAG,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEpFE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAO1B,UAAU,CAAC0B,YAAY,CAAC;EACjC;;AApEWvB,WAAW,C;mBAAXA,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhC,WAAW,C;SAAXA,WAAW;EAAAiC,OAAA,EAAXjC,WAAW,CAAAkC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}