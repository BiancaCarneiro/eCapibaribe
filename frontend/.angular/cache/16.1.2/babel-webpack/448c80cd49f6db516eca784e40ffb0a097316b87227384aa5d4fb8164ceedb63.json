{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nexport let UserLoginComponent = class UserLoginComponent {\n  constructor(userService, formBuilder) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.username = '';\n    this.password = '';\n  }\n  criarForm() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.criarForm();\n  }\n  doLogin() {\n    if (this.form.invalid) return;\n    let user = this.getUser();\n  }\n  getUser() {\n    this.userService.getUserByUsename(this.username).subscribe(user => {\n      return user;\n    });\n  }\n};\n__decorate([Input()], UserLoginComponent.prototype, \"username\", void 0);\n__decorate([Input()], UserLoginComponent.prototype, \"password\", void 0);\nUserLoginComponent = __decorate([Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})], UserLoginComponent);","map":{"version":3,"names":["Component","Input","Validators","UserLoginComponent","constructor","userService","formBuilder","username","password","criarForm","form","group","email","required","senha","ngOnInit","doLogin","invalid","user","getUser","getUserByUsename","subscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Projetos\\ecommerce\\frontend\\src\\app\\components\\user-login\\user-login.component.ts"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../models/user';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-user-login',\n    templateUrl: './user-login.component.html',\n    styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n    @Input() username: string = '';\n    @Input() password: string = '';\n    form!: FormGroup;\n\n\n    constructor(private userService: UserService, private formBuilder: FormBuilder) {\n\n\n    }\n\n    criarForm() {\n\n        this.form = this.formBuilder.group({\n\n            email: ['', [Validators.required, Validators.email]],\n            senha: ['', [Validators.required]]\n\n        })\n\n    }\n\n\n    ngOnInit(): void {\n        this.criarForm();\n    }\n\n    doLogin() {\n        if(this.form.invalid) return;\n        let user = this.getUser();\n    }\n\n    getUser() {\n        this.userService.getUserByUsename(this.username).subscribe((user: User[]) => {\n            return user;\n        });\n    }\n\n\n}\n"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAe,eAAe;AAGtD,SAAgCC,UAAU,QAAO,gBAAgB;AAO1D,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM3BC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IALxD,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAO9B;EAEAC,SAASA,CAAA;IAEL,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAE/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC;KAEpC,CAAC;EAEN;EAGAE,QAAQA,CAAA;IACJ,IAAI,CAACN,SAAS,EAAE;EACpB;EAEAO,OAAOA,CAAA;IACH,IAAG,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;IACtB,IAAIC,IAAI,GAAG,IAAI,CAACC,OAAO,EAAE;EAC7B;EAEAA,OAAOA,CAAA;IACH,IAAI,CAACd,WAAW,CAACe,gBAAgB,CAAC,IAAI,CAACb,QAAQ,CAAC,CAACc,SAAS,CAAEH,IAAY,IAAI;MACxE,OAAOA,IAAI;IACf,CAAC,CAAC;EACN;CAGH;AAtCYI,UAAA,EAARrB,KAAK,EAAE,C,mDAAuB;AACtBqB,UAAA,EAARrB,KAAK,EAAE,C,mDAAuB;AAFtBE,kBAAkB,GAAAmB,UAAA,EAL9BtB,SAAS,CAAC;EACPuB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CAC3C,CAAC,C,EACWtB,kBAAkB,CAuC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}